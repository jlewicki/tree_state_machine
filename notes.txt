Facets:
- State data
   - where is it stored
   - How is it initialized
   - How is it assiged when state is entered
   - Should only leaf states have data (since only a leaf state can be current state)
   - Does data live in states themselves
   - If interiors states can have data, how would the leaf state access the parent/ancestor data?


- Hierarchy
   - root/interior/leaf
   - Should tree topology be separated from state behavior (on enter/on exit/ on message)

- State behavior 
   - how are messages modeled. Can each state have its own set of messages


- How do clients send messages
   - Through the state machine?
      stateMachine.processMessage(msg);
   - Directly to the current state
      stateMachine.currentState.processMessage(msg);

      - With this approach, thate state instance has to have some connection to the state machine, since processing
      the message may incvoklve interactions with other states (managed by the state machne)



- Transitions
   - How are states identified?  By key/string?  Or by type?
   onMessage(MessageContext ctx) {
      return GoTo('state 2')
      return GoTo<State2>()
   }

   - Can we prefefine transitions
      state1.transitionsTo(State2)
   or
      stateBuilder
         .withData<ChooseScenarioData>()
         .transitionsTo<ChooseUboatState>( (ChooseScenarionData currentData) { 
            return ChooseUboatData(currentData.scenario); } )
         //.transitionsTo( (TransitionBuilder tb) { tb.} )
   